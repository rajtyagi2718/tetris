TODO NES rotation system

TODO board.stick
  
g++ -std=c++17 ../src/piece.cpp -o ../build/piece.o && g++ -std=c++17 

g++ -std=c++17 -c ../src/searchgame.cpp -o ../build/searchgame.o && g++ -std=c++17 main.o ../build/exception.o ../build/bitboard.o ../build/board.o ../build/piece.o ../build/agent.o ../build/game.o ../build/searchgame.o searchgametest.cpp -lgtest -lgtest_main -pthread -o searchtests && ./searchtests   

g++ -std=c++17 ../build/exception.o ../build/bitboard.o ../build/board.o ../build/piece.o ../build/agent.o ../build/game.o ../build/graphics.o ../build/searchgame.o graphicsgametest.cpp -lsfml-graphics -lsfml-window -lsfml-system -lgtest -lgtest_main -pthread -o graphicstest

g++ -std=c++17 main.o ../build/exception.o exceptiontest.o ../build/bitboard.o bitboardtest.o ../build/board.o boardtest.o ../build/piece.o piecetest.o ../build/agent.o agenttest.o ../build/game.o gametest.o ../build/graphics.o ../build/graphicsgame.o graphicsgametest.o ../build/searchgame.o searchgametest.o -lsfml-graphics -lsfml-window -lsfml-system -lgtest -lgtest_main -pthread -o alltests

TODO SearchAgent, Search 
  game calls agent when piece spawns
    agent resets search
      search copies board, spawns identical piece
    agent calls search to explore
    agent calls search for path
    agent gets next move
  game calls agent for next move
    agent gets next move
  ...
  game calls agent for next move
    agent gets next move
  
class equality ??

reacheable piece end states

heights holes bumpiness

board
  bitboard
  bitpiece

game 
  board
    piece
  agent
    search

ai
  enumerate piece end states
  graph search reacheable end states
  evaluate end states
    clears heights holes overhangs ditches bumpiness
  
